<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CourageHe&#39;s Blog</title>
  <icon>https://couragehe.github.io/icon.png</icon>
  <subtitle>有勇须知方</subtitle>
  <link href="https://couragehe.github.io/atom.xml" rel="self"/>
  
  <link href="https://couragehe.github.io/"/>
  <updated>2023-04-23T17:20:24.603Z</updated>
  <id>https://couragehe.github.io/</id>
  
  <author>
    <name>Courage He</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>正则表达式应用</title>
    <link href="https://couragehe.github.io/2023/04/24/ea70f58465a7/"/>
    <id>https://couragehe.github.io/2023/04/24/ea70f58465a7/</id>
    <published>2023-04-23T17:12:28.000Z</published>
    <updated>2023-04-23T17:20:24.603Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;正则表达式应用&quot;&gt;&lt;a href=&quot;#正则表达式应用&quot; class=&quot;headerlink&quot; title=&quot;正则表达式应用&quot;&gt;&lt;/a&gt;正则表达式应用&lt;/h1&gt;&lt;p&gt;正则表达式(Regular Expression)是一种文本模式，包括普通字符（例如，a 到 z</summary>
        
      
    
    
    
    <category term="实用工具" scheme="https://couragehe.github.io/categories/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>Fetch模拟请求</title>
    <link href="https://couragehe.github.io/2023/04/24/5578338b382a/"/>
    <id>https://couragehe.github.io/2023/04/24/5578338b382a/</id>
    <published>2023-04-23T16:55:28.000Z</published>
    <updated>2023-04-23T16:57:43.573Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;Fetch模拟请求&quot;&gt;&lt;a href=&quot;#Fetch模拟请求&quot; class=&quot;headerlink&quot; title=&quot;Fetch模拟请求&quot;&gt;&lt;/a&gt;Fetch模拟请求&lt;/h1&gt;&lt;p&gt;当有接口需要测试的时候，以前的想法都是采用postman保存URL，并从浏览器中复制cookie进行测试。最近发现了&lt;strong&gt;fetch&lt;/strong&gt;这个工具，可以在浏览器控制台下模拟请求，直接就可以使用浏览器的用户环境，无需构造cookie，请求头等。这个工具对于简单的接口测试还是非常有效率的！&lt;/p&gt;</summary>
    
    
    
    <category term="实用工具" scheme="https://couragehe.github.io/categories/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="JavaScript" scheme="https://couragehe.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Redis知识及应用</title>
    <link href="https://couragehe.github.io/2023/03/16/474bac5cf7e4/"/>
    <id>https://couragehe.github.io/2023/03/16/474bac5cf7e4/</id>
    <published>2023-03-16T11:50:44.000Z</published>
    <updated>2023-03-16T11:50:49.176Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;Redis知识及应用&quot;&gt;&lt;a href=&quot;#Redis知识及应用&quot; class=&quot;headerlink&quot; title=&quot;Redis知识及应用&quot;&gt;&lt;/a&gt;Redis知识及应用&lt;/h1&gt;&lt;h2 id=&quot;排行榜实现&quot;&gt;&lt;a href=&quot;#排行榜实现&quot;</summary>
        
      
    
    
    
    <category term="学海无涯" scheme="https://couragehe.github.io/categories/%E5%AD%A6%E6%B5%B7%E6%97%A0%E6%B6%AF/"/>
    
    
    <category term="Redis" scheme="https://couragehe.github.io/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>第 99 双周赛&amp;第335场周赛</title>
    <link href="https://couragehe.github.io/2023/03/05/2cbe1aa30f9c/"/>
    <id>https://couragehe.github.io/2023/03/05/2cbe1aa30f9c/</id>
    <published>2023-03-05T12:00:26.000Z</published>
    <updated>2023-03-05T14:24:50.152Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;第-99-双周赛-amp-第335场周赛&quot;&gt;&lt;a href=&quot;#第-99-双周赛-amp-第335场周赛&quot; class=&quot;headerlink&quot; title=&quot;第 99 双周赛&amp;amp;第335场周赛&quot;&gt;&lt;/a&gt;第 99 双周赛&amp;amp;第335场周赛&lt;/h2&gt;&lt;p&gt;本周同时参加了第99场双周赛和第335场周赛，因此本文将两场比赛的题目一起整理如下！这次竞赛&lt;/p&gt;
&lt;h3 id=&quot;第-99-场双周赛&quot;&gt;&lt;a href=&quot;#第-99-场双周赛&quot; class=&quot;headerlink&quot; title=&quot;第 99 场双周赛&quot;&gt;&lt;/a&gt;第 99 场双周赛&lt;/h3&gt;&lt;p&gt;双周赛解决了1，2题，第三题超时一直没解决。下次努力！&lt;/p&gt;
&lt;h4 id=&quot;01-最小和分割&quot;&gt;&lt;a href=&quot;#01-最小和分割&quot; class=&quot;headerlink&quot; title=&quot;01.最小和分割&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://leetcode.cn/contest/biweekly-contest-99/problems/split-with-minimum-sum/&quot;&gt;01.最小和分割&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;这是参赛时想出来的思路：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;num&lt;/code&gt;由&lt;code&gt;0-9&lt;/code&gt;组合，用长度为&lt;code&gt;10&lt;/code&gt;的数组存储数字数量，数组索引代表存储的数，值代表个数&lt;/li&gt;
&lt;li&gt;将数组中存储的的的数字从0-9依次分配至&lt;code&gt;builder1&lt;/code&gt;和&lt;code&gt;builder2&lt;/code&gt;，&lt;/li&gt;
&lt;li&gt;将两数字串解析为数字相加，即为答案！&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://couragehe.github.io/categories/Algorithm/"/>
    
    
    <category term="LeetCode" scheme="https://couragehe.github.io/tags/LeetCode/"/>
    
    <category term="竞赛" scheme="https://couragehe.github.io/tags/%E7%AB%9E%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>MySQL知识小结</title>
    <link href="https://couragehe.github.io/2023/03/01/691bbc5b3562/"/>
    <id>https://couragehe.github.io/2023/03/01/691bbc5b3562/</id>
    <published>2023-03-01T06:52:44.000Z</published>
    <updated>2023-04-23T16:27:22.720Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;SQL知识小结&quot;&gt;&lt;a href=&quot;#SQL知识小结&quot; class=&quot;headerlink&quot; title=&quot;SQL知识小结&quot;&gt;&lt;/a&gt;SQL知识小结&lt;/h1&gt;&lt;h2 id=&quot;常用函数&quot;&gt;&lt;a href=&quot;#常用函数&quot; class=&quot;headerlink&quot; title=&quot;常用函数&quot;&gt;&lt;/a&gt;常用函数&lt;/h2&gt;&lt;p&gt;不同数据库的函数往往各不相同，因此不可移植。本节主要以 MySQL 的函数为例。&lt;/p&gt;
&lt;h3 id=&quot;文本处理&quot;&gt;&lt;a href=&quot;#文本处理&quot; class=&quot;headerlink&quot; title=&quot;文本处理&quot;&gt;&lt;/a&gt;文本处理&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;函数&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LEFT()&lt;/code&gt;、&lt;code&gt;RIGHT()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;左边或者右边的字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LOWER()&lt;/code&gt;、&lt;code&gt;UPPER()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;转换为小写或者大写&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LTRIM()&lt;/code&gt;、&lt;code&gt;RTIM()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;去除左边或者右边的空格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LENGTH()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;长度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;SOUNDEX()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;转换为语音值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    <category term="学海无涯" scheme="https://couragehe.github.io/categories/%E5%AD%A6%E6%B5%B7%E6%97%A0%E6%B6%AF/"/>
    
    
    <category term="SQL" scheme="https://couragehe.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>数据结构之各种树(二叉树、AVL树、红黑树、B、B+树)</title>
    <link href="https://couragehe.github.io/2023/02/27/e5ee594c5418/"/>
    <id>https://couragehe.github.io/2023/02/27/e5ee594c5418/</id>
    <published>2023-02-27T14:22:44.000Z</published>
    <updated>2023-02-27T14:41:33.654Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;数据结构之各种树-二叉树、AVL树、红黑树、B、B-树&quot;&gt;&lt;a href=&quot;#数据结构之各种树-二叉树、AVL树、红黑树、B、B-树&quot; class=&quot;headerlink&quot; title=&quot;数据结构之各种树(二叉树、AVL树、红黑树、B、B+树)&quot;&gt;&lt;/a&gt;数据结构之各种树(二叉树、AVL树、红黑树、B、B+树)&lt;/h1&gt;&lt;h2 id=&quot;二叉查找树&quot;&gt;&lt;a href=&quot;#二叉查找树&quot; class=&quot;headerlink&quot; title=&quot;二叉查找树&quot;&gt;&lt;/a&gt;二叉查找树&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;性质：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、任意节点左子树不为空，则左子树的值均小于根节点的值；&lt;br&gt;2、任意节点右子树不为空，则右子树的值均大于于根节点的值；&lt;br&gt;3、任意节点的左右子树也分别是二叉查找树；&lt;br&gt;4、没有键值相等的节点；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;图示：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二叉查找树&lt;/strong&gt;按照&lt;strong&gt;中序遍历&lt;/strong&gt;即从小到大分布：1，3，4，6，7，8，10，13，14&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/data/%E4%B8%8B%E8%BD%BD.png&quot; alt=&quot;下载&quot;&gt;‘&lt;/p&gt;</summary>
    
    
    
    <category term="学海无涯" scheme="https://couragehe.github.io/categories/%E5%AD%A6%E6%B5%B7%E6%97%A0%E6%B6%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>第 98 双周赛&amp;第333场周赛 | 归并排序、动态规划</title>
    <link href="https://couragehe.github.io/2023/02/19/f91a1cafe11e/"/>
    <id>https://couragehe.github.io/2023/02/19/f91a1cafe11e/</id>
    <published>2023-02-19T14:30:26.000Z</published>
    <updated>2023-03-05T11:54:51.814Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;第-98-双周赛-amp-第333场周赛-归并排序、动态规划&quot;&gt;&lt;a href=&quot;#第-98-双周赛-amp-第333场周赛-归并排序、动态规划&quot; class=&quot;headerlink&quot; title=&quot;第 98 双周赛&amp;amp;第333场周赛 | 归并排序、动态规划&quot;&gt;&lt;/a&gt;第 98 双周赛&amp;amp;第333场周赛 | 归并排序、动态规划&lt;/h2&gt;&lt;p&gt;本周同时参加了第98场双周赛和第333场周赛，因此本文将两场比赛的题目一起整理如下！&lt;/p&gt;
&lt;h3 id=&quot;第-98-场双周赛&quot;&gt;&lt;a href=&quot;#第-98-场双周赛&quot; class=&quot;headerlink&quot; title=&quot;第 98 场双周赛&quot;&gt;&lt;/a&gt;第 98 场双周赛&lt;/h3&gt;&lt;h4 id=&quot;01-替换一个数字后的最大差值&quot;&gt;&lt;a href=&quot;#01-替换一个数字后的最大差值&quot; class=&quot;headerlink&quot; title=&quot;01.替换一个数字后的最大差值&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://leetcode.cn/problems/maximum-difference-by-remapping-a-digit/&quot;&gt;01.替换一个数字后的最大差值&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;暴力枚举，找出所有可能的最大值、最小值即可得到答案。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution01&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//暴力枚举&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;minMaxDifference&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; num)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String s = String.valueOf(num);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; max = Integer.MIN_VALUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; min = Integer.MAX_VALUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//获取最大值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; digitMax = Integer.parseInt(s.replace((&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;)i,&lt;span class=&quot;string&quot;&gt;&amp;#x27;9&amp;#x27;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            max = max&amp;gt;digitMax?max:digitMax;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//获取最小值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; digitMin = Integer.parseInt(s.replace((&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;)i,&lt;span class=&quot;string&quot;&gt;&amp;#x27;0&amp;#x27;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            min = min&amp;lt;digitMin?min:digitMin;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; max-min;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://couragehe.github.io/categories/Algorithm/"/>
    
    
    <category term="LeetCode" scheme="https://couragehe.github.io/tags/LeetCode/"/>
    
    <category term="竞赛" scheme="https://couragehe.github.io/tags/%E7%AB%9E%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络</title>
    <link href="https://couragehe.github.io/2023/02/18/55b1ea89765a/"/>
    <id>https://couragehe.github.io/2023/02/18/55b1ea89765a/</id>
    <published>2023-02-18T06:56:44.000Z</published>
    <updated>2023-02-20T08:20:19.007Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;计算机网络&quot;&gt;&lt;a href=&quot;#计算机网络&quot; class=&quot;headerlink&quot; title=&quot;计算机网络&quot;&gt;&lt;/a&gt;计算机网络&lt;/h1&gt;&lt;h2 id=&quot;常用协议&quot;&gt;&lt;a href=&quot;#常用协议&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="学海无涯" scheme="https://couragehe.github.io/categories/%E5%AD%A6%E6%B5%B7%E6%97%A0%E6%B6%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>第328场周赛</title>
    <link href="https://couragehe.github.io/2023/01/20/3140beef8a39/"/>
    <id>https://couragehe.github.io/2023/01/20/3140beef8a39/</id>
    <published>2023-01-20T14:23:26.000Z</published>
    <updated>2023-02-15T07:34:10.828Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;第328场周赛&quot;&gt;&lt;a href=&quot;#第328场周赛&quot; class=&quot;headerlink&quot; title=&quot;第328场周赛&quot;&gt;&lt;/a&gt;第328场周赛&lt;/h3&gt;&lt;h4 id=&quot;01-数组元素和与数字和的绝对差&quot;&gt;&lt;a href=&quot;#01-数组元素和与数字和的绝对差&quot; class=&quot;headerlink&quot; title=&quot;01. 数组元素和与数字和的绝对差&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://leetcode.cn/problems/difference-between-element-sum-and-digit-sum-of-an-array/&quot;&gt;01. 数组元素和与数字和的绝对差&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;简单题，暴力即可。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;num%10&lt;/code&gt;代表获取该数的个位数字&lt;/p&gt;
&lt;p&gt;&lt;code&gt;num/10&lt;/code&gt;代表该数缩小10倍，原个位数字抹掉了&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution01&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;differenceOfSum&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] nums)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sum1 = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sum2 = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i =&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;nums.length;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sum1+= nums[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(nums[i] !=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; )&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sum2 += nums[i] % &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                nums[i] = nums[i] / &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Math.abs(sum1-sum2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://couragehe.github.io/categories/Algorithm/"/>
    
    
    <category term="LeetCode" scheme="https://couragehe.github.io/tags/LeetCode/"/>
    
    <category term="竞赛" scheme="https://couragehe.github.io/tags/%E7%AB%9E%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>动态规划</title>
    <link href="https://couragehe.github.io/2022/09/17/840fb5fcea0c/"/>
    <id>https://couragehe.github.io/2022/09/17/840fb5fcea0c/</id>
    <published>2022-09-17T10:54:26.000Z</published>
    <updated>2023-02-16T07:21:11.110Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;动态规划&quot;&gt;&lt;a href=&quot;#动态规划&quot; class=&quot;headerlink&quot; title=&quot;动态规划&quot;&gt;&lt;/a&gt;动态规划&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;将原问题拆解成若干子问题，同时保存子问题的答案，使得每个子问题只求解一次，最终获得原问题的答案。&lt;/p&gt;
&lt;p&gt;递归问题》重叠子问题》记忆化搜索（自顶向下的解决问题）/动态规划（自底向上的解决问题）&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://couragehe.github.io/categories/Algorithm/"/>
    
    
    <category term="LeetCode" scheme="https://couragehe.github.io/tags/LeetCode/"/>
    
    <category term="专题练习" scheme="https://couragehe.github.io/tags/%E4%B8%93%E9%A2%98%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>新装虚拟机-网络配置</title>
    <link href="https://couragehe.github.io/2022/08/10/f459a23fb1fd/"/>
    <id>https://couragehe.github.io/2022/08/10/f459a23fb1fd/</id>
    <published>2022-08-10T05:19:44.000Z</published>
    <updated>2023-02-15T06:54:06.813Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;新装虚拟机-网络配置&quot;&gt;&lt;a href=&quot;#新装虚拟机-网络配置&quot; class=&quot;headerlink&quot; title=&quot;新装虚拟机-网络配置&quot;&gt;&lt;/a&gt;新装虚拟机-网络配置&lt;/h1&gt;&lt;h2 id=&quot;1、vmware网络简介&quot;&gt;&lt;a href=&quot;#1、vmware网络简介&quot; class=&quot;headerlink&quot; title=&quot;1、vmware网络简介&quot;&gt;&lt;/a&gt;1、vmware网络简介&lt;/h2&gt;&lt;h3 id=&quot;1-Host-Only（仅主机模式）&quot;&gt;&lt;a href=&quot;#1-Host-Only（仅主机模式）&quot; class=&quot;headerlink&quot; title=&quot;1.Host-Only（仅主机模式）&quot;&gt;&lt;/a&gt;&lt;strong&gt;1.Host-Only（仅主机模式）&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;Host-Only模式其实就是NAT模式去除了虚拟NAT设备，然后使用VMware Network Adapter VMnet1虚拟网卡连接VMnet1虚拟交换机来与虚拟机通信的，Host-Only模式将虚拟机与外网隔开，使得虚拟机成为一个独立的系统，只与主机相互通讯。其网络结构如下图所示：</summary>
    
    
    
    <category term="Linux" scheme="https://couragehe.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://couragehe.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>排序算法展示</title>
    <link href="https://couragehe.github.io/2022/01/09/3770499952d7/"/>
    <id>https://couragehe.github.io/2022/01/09/3770499952d7/</id>
    <published>2022-01-09T07:37:23.000Z</published>
    <updated>2023-02-15T06:29:58.517Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;排序算法展示&quot;&gt;&lt;a href=&quot;#排序算法展示&quot; class=&quot;headerlink&quot; title=&quot;排序算法展示&quot;&gt;&lt;/a&gt;排序算法展示&lt;/h1&gt;&lt;h2 id=&quot;排序定义及其性质&quot;&gt;&lt;a href=&quot;#排序定义及其性质&quot; class=&quot;headerlink&quot; title=&quot;排序定义及其性质&quot;&gt;&lt;/a&gt;排序定义及其性质&lt;/h2&gt;&lt;h3 id=&quot;一、冒泡排序&quot;&gt;&lt;a href=&quot;#一、冒泡排序&quot; class=&quot;headerlink&quot; title=&quot;一、冒泡排序&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://baike.baidu.com/item/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F&quot;&gt;一、冒泡排序&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;冒泡排序（Bubble Sort），是一种&lt;a href=&quot;https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6&quot;&gt;计算机科学&lt;/a&gt;领域的较简单的&lt;a href=&quot;https://baike.baidu.com/item/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/5399605&quot;&gt;排序算法&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;它重复地走访过要排序的元素列，依次比较两个相邻的元素，如果顺序（如从大到小、首字母从Z到A）错误就把他们交换过来。走访元素的工作是重复地进行直到没有相邻元素需要交换，也就是说该元素列已经排序完成。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端（升序或降序排列），就如同碳酸饮料中二氧化碳的气泡最终会上浮到顶端一样，故名“冒泡排序”。</summary>
    
    
    
    <category term="Algorithm" scheme="https://couragehe.github.io/categories/Algorithm/"/>
    
    
    <category term="专题练习" scheme="https://couragehe.github.io/tags/%E4%B8%93%E9%A2%98%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Windows小技巧</title>
    <link href="https://couragehe.github.io/2021/04/10/5a457db9baf9/"/>
    <id>https://couragehe.github.io/2021/04/10/5a457db9baf9/</id>
    <published>2021-04-10T14:15:28.000Z</published>
    <updated>2023-02-15T06:54:06.617Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;Windows小技巧&quot;&gt;&lt;a href=&quot;#Windows小技巧&quot; class=&quot;headerlink&quot; title=&quot;Windows小技巧&quot;&gt;&lt;/a&gt;Windows小技巧&lt;/h1&gt;&lt;p&gt;&amp;emsp;&amp;emsp;用于记录日常使用Windows的小技巧，后期会不断更新。勤于记录，孰能生巧。&lt;/p&gt;</summary>
    
    
    
    <category term="实用工具" scheme="https://couragehe.github.io/categories/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Windows" scheme="https://couragehe.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>驾照考试-刷题总结</title>
    <link href="https://couragehe.github.io/2021/03/04/e831abc0a85c/"/>
    <id>https://couragehe.github.io/2021/03/04/e831abc0a85c/</id>
    <published>2021-03-04T12:45:44.000Z</published>
    <updated>2023-02-27T14:40:37.087Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;驾照考试-刷题总结&quot;&gt;&lt;a href=&quot;#驾照考试-刷题总结&quot; class=&quot;headerlink&quot; title=&quot;驾照考试-刷题总结&quot;&gt;&lt;/a&gt;驾照考试-刷题总结&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;本文主要用于记录，在准备驾照考试中总结的日常经验。在&lt;a href=&quot;https://couragehe.github.io/&quot;&gt;CourageHe’s Blog&lt;/a&gt;不间断更新，欢迎各位看官指教。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="学海无涯" scheme="https://couragehe.github.io/categories/%E5%AD%A6%E6%B5%B7%E6%97%A0%E6%B6%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>辛丑牛年新年展望（2021）</title>
    <link href="https://couragehe.github.io/2021/02/12/6ea85d902251/"/>
    <id>https://couragehe.github.io/2021/02/12/6ea85d902251/</id>
    <published>2021-02-12T13:21:21.000Z</published>
    <updated>2023-02-15T06:54:06.761Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;辛丑牛年新年展望（2021）&quot;&gt;&lt;a href=&quot;#辛丑牛年新年展望（2021）&quot; class=&quot;headerlink&quot; title=&quot;辛丑牛年新年展望（2021）&quot;&gt;&lt;/a&gt;辛丑牛年新年展望（2021）&lt;/h1&gt;&lt;p&gt;&amp;emsp;&amp;emsp;2021年2月12日为辛丑牛年正月初一，就农历而言，今天便就是中国的农历新年。作为一个对传统佳节有浓厚感情的传统国人，辞旧迎新、展望未来便是本文的初衷。2020元旦总结虽有稍许记录，却未整理成文，今天借这个机会发表啦！&lt;/p&gt;</summary>
    
    
    
    <category term="个人有感" scheme="https://couragehe.github.io/categories/%E4%B8%AA%E4%BA%BA%E6%9C%89%E6%84%9F/"/>
    
    
  </entry>
  
  <entry>
    <title>剑指 Offer 07. 重建二叉树</title>
    <link href="https://couragehe.github.io/2021/02/10/c0d1481126c5/"/>
    <id>https://couragehe.github.io/2021/02/10/c0d1481126c5/</id>
    <published>2021-02-10T13:07:23.000Z</published>
    <updated>2023-02-15T06:54:06.882Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;剑指-Offer-07-重建二叉树&quot;&gt;&lt;a href=&quot;#剑指-Offer-07-重建二叉树&quot; class=&quot;headerlink&quot; title=&quot;剑指 Offer 07. 重建二叉树&quot;&gt;&lt;/a&gt;剑指 Offer 07. 重建二叉树&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;题目来源：剑指 Offer 07.&lt;/p&gt;
&lt;p&gt;题目链接：&lt;a href=&quot;https://leetcode-cn.com/problems/zhong-jian-er-cha-shu-lcof/&quot;&gt;https://leetcode-cn.com/problems/zhong-jian-er-cha-shu-lcof/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;输入某二叉树的前序遍历和中序遍历的结果，请重建该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。&lt;/p&gt;
&lt;p&gt;例如，给出&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;前序遍历 preorder &amp;#x3D; [3,9,20,15,7]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;中序遍历 inorder &amp;#x3D; [9,3,15,20,7]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;返回如下的二叉树：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;  3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#x2F; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9  20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#x2F;  \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 15   7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;p&gt;限制：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;0 &amp;lt;= 节点个数 &amp;lt;= 5000&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://couragehe.github.io/categories/Algorithm/"/>
    
    
    <category term="LeetCode" scheme="https://couragehe.github.io/tags/LeetCode/"/>
    
    <category term="剑指 Offer" scheme="https://couragehe.github.io/tags/%E5%89%91%E6%8C%87-Offer/"/>
    
  </entry>
  
  <entry>
    <title>剑指 Offer 06. 从尾到头打印链表</title>
    <link href="https://couragehe.github.io/2021/02/07/6ac5d91209ed/"/>
    <id>https://couragehe.github.io/2021/02/07/6ac5d91209ed/</id>
    <published>2021-02-07T14:45:23.000Z</published>
    <updated>2023-02-15T06:54:06.865Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;剑指-Offer-06-从尾到头打印链表&quot;&gt;&lt;a href=&quot;#剑指-Offer-06-从尾到头打印链表&quot; class=&quot;headerlink&quot; title=&quot;剑指 Offer 06. 从尾到头打印链表&quot;&gt;&lt;/a&gt;剑指 Offer 06. 从尾到头打印链表&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;题目来源：剑指 Offer 06.&lt;/p&gt;
&lt;p&gt;题目链接：&lt;a href=&quot;https://leetcode-cn.com/problems/cong-wei-dao-tou-da-yin-lian-biao-lcof/&quot;&gt;https://leetcode-cn.com/problems/cong-wei-dao-tou-da-yin-lian-biao-lcof/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;输入一个链表的头节点，从尾到头反过来返回每个节点的值（用数组返回）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;输入：head &amp;#x3D; [1,3,2]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出：[2,3,1]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;&lt;strong&gt;限制：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;0 &amp;lt;= 链表长度 &amp;lt;= 10000&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://couragehe.github.io/categories/Algorithm/"/>
    
    
    <category term="LeetCode" scheme="https://couragehe.github.io/tags/LeetCode/"/>
    
    <category term="剑指 Offer" scheme="https://couragehe.github.io/tags/%E5%89%91%E6%8C%87-Offer/"/>
    
  </entry>
  
  <entry>
    <title>剑指 Offer 05. 替换空格</title>
    <link href="https://couragehe.github.io/2021/02/07/c56758abfe9d/"/>
    <id>https://couragehe.github.io/2021/02/07/c56758abfe9d/</id>
    <published>2021-02-07T13:28:23.000Z</published>
    <updated>2023-02-15T06:54:06.865Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;剑指-Offer-05-替换空格&quot;&gt;&lt;a href=&quot;#剑指-Offer-05-替换空格&quot; class=&quot;headerlink&quot; title=&quot;剑指 Offer 05. 替换空格&quot;&gt;&lt;/a&gt;剑指 Offer 05. 替换空格&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;题目来源：剑指 Offer 05&lt;/p&gt;
&lt;p&gt;题目链接：&lt;a href=&quot;https://leetcode-cn.com/problems/ti-huan-kong-ge-lcof/&quot;&gt;https://leetcode-cn.com/problems/ti-huan-kong-ge-lcof/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;请实现一个函数，把字符串 &lt;code&gt;s &lt;/code&gt;中的每个空格替换成”&lt;code&gt;%20&lt;/code&gt;“。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;输入：s &amp;#x3D; &amp;quot;We are happy.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出：&amp;quot;We%20are%20happy.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;&lt;strong&gt;限制：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;0 &amp;lt;= s 的长度 &amp;lt;= 10000&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://couragehe.github.io/categories/Algorithm/"/>
    
    
    <category term="LeetCode" scheme="https://couragehe.github.io/tags/LeetCode/"/>
    
    <category term="剑指 Offer" scheme="https://couragehe.github.io/tags/%E5%89%91%E6%8C%87-Offer/"/>
    
  </entry>
  
  <entry>
    <title>剑指 Offer 04. 二维数组中的查找</title>
    <link href="https://couragehe.github.io/2021/02/07/9bedcabf0de2/"/>
    <id>https://couragehe.github.io/2021/02/07/9bedcabf0de2/</id>
    <published>2021-02-07T12:42:23.000Z</published>
    <updated>2023-02-15T06:09:36.624Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;剑指-Offer-04-二维数组中的查找&quot;&gt;&lt;a href=&quot;#剑指-Offer-04-二维数组中的查找&quot; class=&quot;headerlink&quot; title=&quot;剑指 Offer 04. 二维数组中的查找&quot;&gt;&lt;/a&gt;剑指 Offer 04. 二维数组中的查找&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;题目来源：剑指Offer04&lt;/p&gt;
&lt;p&gt;题目链接：&lt;a href=&quot;https://leetcode-cn.com/problems/er-wei-shu-zu-zhong-de-cha-zhao-lcof/&quot;&gt;https://leetcode-cn.com/problems/er-wei-shu-zu-zhong-de-cha-zhao-lcof/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;在一个 &lt;code&gt;n * m &lt;/code&gt;的二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个高效的函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;现有矩阵 matrix 如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [1,   4,  7, 11, 15],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [2,   5,  8, 12, 19],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [3,   6,  9, 16, 22],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [10, 13, 14, 17, 24],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [18, 21, 23, 26, 30]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;p&gt;给定 &lt;code&gt;target&lt;/code&gt; = 5，返回 &lt;code&gt;true&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;给定 &lt;code&gt;target&lt;/code&gt; = 20，返回 &lt;code&gt;false&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;限制：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;0 &amp;lt;= n &amp;lt;= 1000&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;0 &amp;lt;= m &amp;lt;= 1000&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://couragehe.github.io/categories/Algorithm/"/>
    
    
    <category term="LeetCode" scheme="https://couragehe.github.io/tags/LeetCode/"/>
    
    <category term="剑指 Offer" scheme="https://couragehe.github.io/tags/%E5%89%91%E6%8C%87-Offer/"/>
    
  </entry>
  
  <entry>
    <title>1128.等价多米诺骨牌对的数量</title>
    <link href="https://couragehe.github.io/2021/01/26/f6d039b5ce46/"/>
    <id>https://couragehe.github.io/2021/01/26/f6d039b5ce46/</id>
    <published>2021-01-26T06:33:26.000Z</published>
    <updated>2023-02-15T06:54:06.882Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;1128-等价多米诺骨牌对的数量&quot;&gt;&lt;a href=&quot;#1128-等价多米诺骨牌对的数量&quot; class=&quot;headerlink&quot; title=&quot;1128.等价多米诺骨牌对的数量&quot;&gt;&lt;/a&gt;1128.等价多米诺骨牌对的数量&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;每日一题：2020-01-26&lt;/p&gt;
&lt;p&gt;题目链接：&lt;a href=&quot;https://leetcode-cn.com/problems/number-of-equivalent-domino-pairs/&quot;&gt;https://leetcode-cn.com/problems/number-of-equivalent-domino-pairs/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;给你一个由一些多米诺骨牌组成的列表&lt;code&gt; dominoes&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;如果其中某一张多米诺骨牌可以通过旋转 0 度或 180 度得到另一张多米诺骨牌，我们就认为这两张牌是等价的。&lt;/p&gt;
&lt;p&gt;形式上，&lt;code&gt;dominoes[i] = [a, b] &lt;/code&gt;和&lt;code&gt;dominoes[j] = [c, d]&lt;/code&gt;等价的前提是 &lt;code&gt;a==c&lt;/code&gt; 且&lt;code&gt; b==d&lt;/code&gt;，或是 &lt;code&gt;a==d&lt;/code&gt; 且&lt;code&gt; b==c&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;0 &amp;lt;= i &amp;lt; j &amp;lt; dominoes.length&lt;/code&gt; 的前提下，找出满足 dominoes[i] 和 dominoes[j] 等价的骨牌对 (i, j) 的数量。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;输入：dominoes &amp;#x3D; [[1,2],[2,1],[3,4],[5,6]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出：1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;p&gt;提示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= dominoes.length &amp;lt;= 40000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= dominoes [i][j] &amp;lt;= 9&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://couragehe.github.io/categories/Algorithm/"/>
    
    
    <category term="LeetCode" scheme="https://couragehe.github.io/tags/LeetCode/"/>
    
    <category term="每日一题" scheme="https://couragehe.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
</feed>
